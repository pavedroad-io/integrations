package gobadges

import (
	"testing"
)

// Markdown generated by FOSSA site
var prReport = `https://goreportcard.com/report/github.com/pavedroad-io/integrations`
var prHTML = `https://goreportcard.com/badge/github.com/pavedroad-io/integrations`
var prMD = `[![Go Report Card](https://goreportcard.com/badge/github.com/pavedroad-io/integrations)](https://goreportcard.com/report/github.com/pavedroad-io/integrations)`

type testItem struct {
	reqType  int
	expected string
}

func TestMain(t *testing.T) {
}

// TestErrorMmsg handling
func TestGetBadge(t *testing.T) {
	org := "pavedroad-io"
	repo := "integrations"
	testCases := [...]testItem{
		{GoReport, prReport},
		{GoHTMLink, prHTML},
		{GoMarkDown, prMD},
	}

	for _, i := range testCases {
		url := GetGoBadge(i.reqType, org, repo)
		if url != i.expected {
			t.Errorf("Invalid badge:\nEXPECTED\n\n%s\nGOT\n%s", i.expected, url)
		}
	}
}
