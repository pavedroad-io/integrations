package fossa

import (
	"testing"
)

// Markdown generated by FOSSA site
var mdShield = `[![FOSSA Status](https://app.fossa.com/api/projects/custom%2B9819%2FserviceTypes.svg?type=shield)](https://app.fossa.com/projects/custom%2B9819%2FserviceTypes?ref=badge_shield)`
var mdSmall = `[![FOSSA Status](https://app.fossa.com/api/projects/custom%2B9819%2FserviceTypes.svg?type=small)](https://app.fossa.com/projects/custom%2B9819%2FserviceTypes?ref=badge_small)`
var mdLarge = `[![FOSSA Status](https://app.fossa.com/api/projects/custom%2B9819%2FserviceTypes.svg?type=large)](https://app.fossa.com/projects/custom%2B9819%2FserviceTypes?ref=badge_large)`

// HTML generated by FOSSA site
var HTMLShield = `<a href="https://app.fossa.com/projects/custom%2B9819%2FserviceTypes?ref=badge_shield" alt="FOSSA Status"><img src="https://app.fossa.com/api/projects/custom%2B9819%2FserviceTypes.svg?type=shield"/></a>`
var HTMLSmall = `<a href="https://app.fossa.com/projects/custom%2B9819%2FserviceTypes?ref=badge_small" alt="FOSSA Status"><img src="https://app.fossa.com/api/projects/custom%2B9819%2FserviceTypes.svg?type=small"/></a>`
var HTMLLarge = `<a href="https://app.fossa.com/projects/custom%2B9819%2FserviceTypes?ref=badge_large" alt="FOSSA Status"><img src="https://app.fossa.com/api/projects/custom%2B9819%2FserviceTypes.svg?type=large"/></a>`

// Link generated by FOSSA site
var linkShield = `https://app.fossa.com/api/projects/custom%2B9819%2FserviceTypes.svg?type=shield`
var linkSmall = `https://app.fossa.com/api/projects/custom%2B9819%2FserviceTypes.svg?type=small`
var linkLarge = `https://app.fossa.com/api/projects/custom%2B9819%2FserviceTypes.svg?type=large`

type testItem struct {
	format   int
	size     int
	expected string
}

func TestMain(t *testing.T) {
}

// TestErrorMmsg handling
func TestGetBadge(t *testing.T) {
	service := "serviceTypes"
	testCases := [...]testItem{
		{MarkDown, Shield, mdShield},
		{MarkDown, Small, mdSmall},
		{MarkDown, Large, mdLarge},
		{HTML, Shield, HTMLShield},
		{HTML, Small, HTMLSmall},
		{HTML, Large, HTMLLarge},
		{Link, Shield, linkShield},
		{Link, Small, linkSmall},
		{Link, Large, linkLarge},
	}

	for _, i := range testCases {
		url := GetBadge(i.format, i.size, service)
		if url != i.expected {
			t.Errorf("Invalid badge:\nEXPECTED\n\n%s\nGOT\n%s", i.expected, url)
		}
	}
}
